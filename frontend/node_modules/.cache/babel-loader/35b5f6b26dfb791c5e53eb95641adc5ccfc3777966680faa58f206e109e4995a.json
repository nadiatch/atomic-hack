{"ast":null,"code":"var _jsxFileName = \"/Users/n0rt0n/projects/atomicHack/atomic-hack/frontend/src/components/EditableDiv.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditableDiv = ({\n  clazzName,\n  content,\n  setContent,\n  onKeyDown\n}) => {\n  _s();\n  const editableRef = useRef(null);\n  useEffect(() => {\n    if (content && editableRef.current) {\n      editableRef.current.textContent = content;\n    } else if (editableRef.current) {\n      editableRef.current.textContent = \"\";\n    }\n  }, [content]);\n  const handleChange = e => {\n    if (editableRef.current) {\n      editableRef.current.textContent = e.target.textContent;\n      setContent(e.target.textContent);\n    }\n  };\n  const handleKeyDown = event => {\n    onKeyDown(event);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editableRef,\n    contentEditable: true,\n    className: clazzName,\n    onInput: handleChange,\n    onKeyDown: handleKeyDown\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(EditableDiv, \"X60T1pcPMCaCdqFZ4/3pMDJSyjk=\");\n_c = EditableDiv;\nvar _c;\n$RefreshReg$(_c, \"EditableDiv\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","EditableDiv","clazzName","content","setContent","onKeyDown","_s","editableRef","current","textContent","handleChange","e","target","handleKeyDown","event","ref","contentEditable","className","onInput","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/n0rt0n/projects/atomicHack/atomic-hack/frontend/src/components/EditableDiv.tsx"],"sourcesContent":["import React, {useEffect, useRef} from \"react\";\n\nexport const EditableDiv:React.FC<{\n    onKeyDown: (event: React.KeyboardEvent) => void,\n    clazzName: string,\n    content: string | null,\n    setContent: (content: string | null) => void\n}> = ({clazzName, content, setContent, onKeyDown}) => {\n\n    const editableRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (content && editableRef.current) {\n            editableRef.current.textContent = content;\n        } else if (editableRef.current) {\n            editableRef.current.textContent = \"\";\n        }\n    }, [content]);\n\n    const handleChange = (e: React.ChangeEvent<HTMLDivElement>) => {\n        if (editableRef.current) {\n            editableRef.current.textContent = e.target.textContent;\n            setContent(e.target.textContent);\n        }\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n        onKeyDown(event);\n    }\n\n    return (\n        <div ref={editableRef}\n             contentEditable={true}\n             className={clazzName}\n             onInput={handleChange}\n             onKeyDown={handleKeyDown}/>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAKX,GAAGA,CAAC;EAACC,SAAS;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAElD,MAAMC,WAAW,GAAGT,MAAM,CAAiB,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,IAAIM,OAAO,IAAII,WAAW,CAACC,OAAO,EAAE;MAChCD,WAAW,CAACC,OAAO,CAACC,WAAW,GAAGN,OAAO;IAC7C,CAAC,MAAM,IAAII,WAAW,CAACC,OAAO,EAAE;MAC5BD,WAAW,CAACC,OAAO,CAACC,WAAW,GAAG,EAAE;IACxC;EACJ,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,MAAMO,YAAY,GAAIC,CAAoC,IAAK;IAC3D,IAAIJ,WAAW,CAACC,OAAO,EAAE;MACrBD,WAAW,CAACC,OAAO,CAACC,WAAW,GAAGE,CAAC,CAACC,MAAM,CAACH,WAAW;MACtDL,UAAU,CAACO,CAAC,CAACC,MAAM,CAACH,WAAW,CAAC;IACpC;EACJ,CAAC;EAED,MAAMI,aAAa,GAAIC,KAA0B,IAAK;IAClDT,SAAS,CAACS,KAAK,CAAC;EACpB,CAAC;EAED,oBACId,OAAA;IAAKe,GAAG,EAAER,WAAY;IACjBS,eAAe,EAAE,IAAK;IACtBC,SAAS,EAAEf,SAAU;IACrBgB,OAAO,EAAER,YAAa;IACtBL,SAAS,EAAEQ;EAAc;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAExC,CAAC;AAAAhB,EAAA,CAnCYL,WAKX;AAAAsB,EAAA,GALWtB,WAKX;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}